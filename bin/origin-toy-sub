#!/usr/bin/env python

import sys
import zmq
import json

context = zmq.Context()

info_socket = context.socket(zmq.REQ)
info_socket.connect("tcp://34.208.238.89:5561")
print("Asking server for a list of available streams")
info_socket.send('{}')
response = info_socket.recv()
print("Server responds with...")
print(response)
print('')
knownStreamVersions = json.loads(response)[1]["streams"]
info_socket.close()

sub_socket = context.socket(zmq.SUB)

print("Collecting updates from data server...")
sub_socket.connect("tcp://34.208.238.89:5562")

# set default stream to 0 or use specified stream
stream_filter = sys.argv[1] if len(sys.argv) > 1 else '1'

for sub_stream in knownStreamVersions.keys():
  if knownStreamVersions[sub_stream]["id"] == int(stream_filter):
    break

stream_filter = stream_filter.zfill(4)
print("subscribing to stream: %s [%s]" % (sub_stream, stream_filter) )

# ascii to unicode str
if isinstance(stream_filter, bytes):
  stream_filter = stream_filter.decode('ascii')
sub_socket.setsockopt_string(zmq.SUBSCRIBE, stream_filter)

try:
  while True:
    [streamID, content] = sub_socket.recv_multipart()
    data = json.loads(content)
    print("[%s] %s" % (streamID, data))
except KeyboardInterrupt:
  print("closing...")

sub_socket.close()
context.term()
