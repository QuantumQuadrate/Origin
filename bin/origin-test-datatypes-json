#!/usr/bin/env python

import sys
import os
import random
import time

# first find ourself
fullBinPath  = os.path.abspath(os.getcwd() + "/" + sys.argv[0])
fullBasePath = os.path.dirname(os.path.dirname(fullBinPath))
fullLibPath  = os.path.join(fullBasePath, "lib")
fullCfgPath  = os.path.join(fullBasePath, "config")
sys.path.append(fullLibPath)

from origin.client import server, random_data
from origin import current_time, TIMESTAMP

if len(sys.argv) > 1:
  if sys.argv[1] == 'test':
    configfile = os.path.join(fullCfgPath, "origin-server-test.cfg")
  else:
    configfile = os.path.join(fullCfgPath, sys.argv[1])
else:
  configfile = os.path.join(fullCfgPath, "origin-server.cfg")

import ConfigParser
config = ConfigParser.ConfigParser()
config.read(configfile)

# something that represents the connection to the server
serv = server(config)

streamName = "toy_dtype_test1"
records={
    "toy_int":"int",
    "toy_uint":"uint",
    "toy_int64":"int64",
    "toy_uint64":"uint64",
    "toy_int16":"int16",
    "toy_uint16":"uint16",
    "toy_int8":"int8",
    "toy_uint8":"uint8",
    "toy_float":"float",
    "toy_double":"double",
    "toy_string":"string",
    "toy_bool":"bool",
}

# alert the server that we are going to be sending this type of data
connection = serv.registerStream(
    stream=streamName,
    records=records,
    format="json"
)

# This might need to be more complicated, but you get the gist. Keep sending records forever    
time.sleep(2)

while True:
    print "sending...."
    data = {TIMESTAMP: current_time(config)}
    for entry in records:
        data[entry] = random_data( records[entry] )
    print(data)
    connection.send(**data)
    time.sleep(5)
